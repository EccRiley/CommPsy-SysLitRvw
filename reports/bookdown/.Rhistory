"r",
"c")
shps <- c("circle",
"box",
"circle")
sty.n <- c(" ", rep("filled", 6))
attr <- c("penwidth = 0.5", "fontsize = 12")
nodes <- create_nodes(nodes = nds, label = labs.n, type = tps, color = cols.n, shape = "circle", data = nds, penwidth = 0.5, fontsize = 12)#, style = sty.n)
nodes
edges <- create_edges(from = eds.fr, to = eds.to, color = mypal[2], arrowhead = c(rep("normal", 6), rep("none", 5)), style = c(rep("solid", 7), rep("dashed", 4), rep("dashed", 7)), arrowsize = 0.5)#, penwidth = 0.5, fontsize = 5)
edges
create_graph(nodes_df = nodes, edges_df = edges, node_attrs = attr, edge_attrs = attr, directed = TRUE, graph_attrs = c("output = visNetwork", "layout = circo"))  %>%
render_graph()
mb <- colorRampPalette(mypal[c(5, 16)])
magblu <- mb(10)
nds <- 1:7
eds.fr <- c(1, 2, 3, 4, 5, 6, 6, 1, 1, 1, 1, 7, 7, 7, 7, 7, 7, 7)
eds.to <- c(2, 3, 4, 5, 6, 2, 1, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 1)
edsT.fr <- c(1, 1, 1, 1, 1)
edsT.to <- c(2, 3, 4, 5, 6)
#cols.n <- c(mypal[2], mypal[16], mypal[19], mypal[19], mypal[19], mypal[19], magblu[5])
#cols.n <- c(cols.n[1], sapply(cols.n[2:6], adjustcolor, alpha.f = 0.5), cols.n[7])
cols.n <- c(mypal[1], mypal[14], mypal[2], mypal[2], mypal[2], mypal[2], magblu[5])
labs.n <- c("Theory",
"Open-Ended\nInterviews &\nFocus Groups",
"Longitudinal\nSurvey",
"Intervention\nDevelopment",
"Intervention\nImplementation",
"Qualitative & Quantitative\nEvaluation",
"Community")
tps <- c("t",
"r",
"i",
"r",
"c")
shps <- c("circle",
"box",
"circle")
sty.n <- c(" ", rep("filled", 6))
attr <- c("penwidth = 0.5", "fontsize = 12")
nodes <- create_nodes(nodes = nds, label = labs.n, type = tps, color = cols.n, shape = shps, data = nds, penwidth = 0.5, fontsize = 12)#, style = sty.n)
nodes
edges <- create_edges(from = eds.fr, to = eds.to, color = mypal[2], arrowhead = c(rep("normal", 6), rep("none", 5)), style = c(rep("solid", 7), rep("dashed", 4), rep("dashed", 7)), arrowsize = 0.5)#, penwidth = 0.5, fontsize = 5)
edges
create_graph(nodes_df = nodes, edges_df = edges, node_attrs = attr, edge_attrs = attr, directed = TRUE, graph_attrs = c("output = visNetwork", "layout = circo"))  %>%
render_graph()
mb <- colorRampPalette(mypal[c(5, 16)])
magblu <- mb(10)
nds <- 1:7
eds.fr <- c(1, 2, 3, 4, 5, 6, 6, 1, 1, 1, 1, 7, 7, 7, 7, 7, 7, 7)
eds.to <- c(2, 3, 4, 5, 6, 2, 1, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 1)
edsT.fr <- c(1, 1, 1, 1, 1)
edsT.to <- c(2, 3, 4, 5, 6)
#cols.n <- c(mypal[2], mypal[16], mypal[19], mypal[19], mypal[19], mypal[19], magblu[5])
#cols.n <- c(cols.n[1], sapply(cols.n[2:6], adjustcolor, alpha.f = 0.5), cols.n[7])
cols.n <- c(mypal[1], mypal[14], mypal[2], mypal[2], mypal[2], mypal[2], magblu[5])
labs.n <- c("Theory",
"Open-Ended\nInterviews &\nFocus Groups",
"Longitudinal\nSurvey",
"Intervention\nDevelopment",
"Intervention\nImplementation",
"Qualitative & Quantitative\nEvaluation",
"Community")
tps <- c("t",
"r",
"i",
"r",
"c")
shps <- c("circle",
"box",
"circle")
sty.n <- c(" ", rep("filled", 6))
attr <- c("penwidth = 0.5", "fontsize = 12")
nodes <- create_nodes(nodes = nds, label = labs.n, type = tps, color = cols.n, shape = shps, penwidth = 0.5, fontsize = 12)#, style = sty.n)
nodes
edges <- create_edges(from = eds.fr, to = eds.to, color = mypal[2], arrowhead = c(rep("normal", 6), rep("none", 5)), style = c(rep("solid", 7), rep("dashed", 4), rep("dashed", 7)), arrowsize = 0.5)#, penwidth = 0.5, fontsize = 5)
edges
create_graph(nodes_df = nodes, edges_df = edges, node_attrs = attr, edge_attrs = attr, directed = TRUE, graph_attrs = c("output = visNetwork", "layout = circo"))  %>%
render_graph()
mb <- colorRampPalette(mypal[c(5, 16)])
magblu <- mb(10)
nds <- 1:7
eds.fr <- c(1, 2, 3, 4, 5, 6, 6, 1, 1, 1, 1, 7, 7, 7, 7, 7, 7, 7)
eds.to <- c(2, 3, 4, 5, 6, 2, 1, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 1)
edsT.fr <- c(1, 1, 1, 1, 1)
edsT.to <- c(2, 3, 4, 5, 6)
#cols.n <- c(mypal[2], mypal[16], mypal[19], mypal[19], mypal[19], mypal[19], magblu[5])
#cols.n <- c(cols.n[1], sapply(cols.n[2:6], adjustcolor, alpha.f = 0.5), cols.n[7])
cols.n <- c(mypal[1], mypal[14], mypal[2], mypal[2], mypal[2], mypal[2], magblu[5])
labs.n <- c("Theory",
"Open-Ended\nInterviews &\nFocus Groups",
"Longitudinal\nSurvey",
"Intervention\nDevelopment",
"Intervention\nImplementation",
"Qualitative & Quantitative\nEvaluation",
"Community")
tps <- c("t",
"r",
"i",
"r",
"c")
shps <- c("circle",
"box",
"circle")
sty.n <- c(" ", rep("filled", 6))
attr <- c("penwidth = 0.5", "fontsize = 12")
nodes <- create_nodes(nodes = nds, label = labs.n, type = tps, color = cols.n, shape = shps, penwidth = 0.5, fontsize = 12)#, style = sty.n)
nodes
edges <- create_edges(from = eds.fr, to = eds.to, color = mypal[2], arrowhead = c(rep("normal", 6), rep("none", 5)), style = c(rep("solid", 7), rep("dashed", 4), rep("dashed", 7)), arrowsize = 0.5)#, penwidth = 0.5, fontsize = 5)
edges
create_graph(nodes_df = nodes, edges_df = edges, node_attrs = attr, edge_attrs = attr, directed = TRUE, graph_attrs = c("output = visNetwork", "layout = neato"))  %>%
render_graph()
mb <- colorRampPalette(mypal[c(5, 16)])
magblu <- mb(10)
nds <- 1:7
eds.fr <- c(1, 2, 3, 4, 5, 6, 6, 1, 1, 1, 1, 7, 7, 7, 7, 7, 7, 7)
eds.to <- c(2, 3, 4, 5, 6, 2, 1, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 1)
edsT.fr <- c(1, 1, 1, 1, 1)
edsT.to <- c(2, 3, 4, 5, 6)
#cols.n <- c(mypal[2], mypal[16], mypal[19], mypal[19], mypal[19], mypal[19], magblu[5])
#cols.n <- c(cols.n[1], sapply(cols.n[2:6], adjustcolor, alpha.f = 0.5), cols.n[7])
cols.n <- c(mypal[1], mypal[14], mypal[2], mypal[2], mypal[2], mypal[2], magblu[5])
labs.n <- c("Theory",
"Open-Ended\nInterviews &\nFocus Groups",
"Longitudinal\nSurvey",
"Intervention\nDevelopment",
"Intervention\nImplementation",
"Qualitative & Quantitative\nEvaluation",
"Community")
tps <- c("t",
"r",
"i",
"r",
"c")
shps <- c("circle",
"box",
"circle")
sty.n <- c(" ", rep("filled", 6))
attr <- c("penwidth = 0.5", "fontsize = 12")
nodes <- create_nodes(nodes = nds, label = labs.n, type = tps, color = cols.n, shape = shps, penwidth = 0.5, fontsize = 12)#, style = sty.n)
nodes
edges <- create_edges(from = eds.fr, to = eds.to, color = mypal[2], arrowhead = c(rep("normal", 6), rep("none", 5)), style = c(rep("solid", 7), rep("dashed", 4), rep("dashed", 7)), arrowsize = 0.5)#, penwidth = 0.5, fontsize = 5)
edges
create_graph(nodes_df = nodes, edges_df = edges, node_attrs = attr, edge_attrs = attr, directed = TRUE, graph_attrs = c("output = visNetwork", "layout = forcedirected"))  %>%
render_graph()
save.image("~/Dropbox/rstudio/.RData.RData")
help(package = "tufte")
file.edit("SETUP.R")
ls()
RtftH("SETUP.R")
getwd()
RtftH("LaTeX-textSymbol.Rmd")
RtftH("BibTeX-Regex.Rmd")
options(big.mark = ",")
N1 <- 11769
N1prnt <- format(N1,big.mark=",")
PAA <- 0.084
PWH <- 0.916
PAAperc <- PAA*100
PWHperc <- PWH*100
NAA <- format(round(PAA*N1, 0), big.mark = ",")
NWH <- format(round(PWH*N1, 0), big.mark = ",")
pr.test <- 0.5
NAA
NWH
options(big.mark = ",")
N1 <- 11769
N1prnt <- format(N1,big.mark=",")
PAA <- 0.084
PWH <- 0.916
PAAperc <- PAA*95
PWHperc <- PWH*95
NAA <- format(round(PAA*N1, 0), big.mark = ",")
NWH <- format(round(PWH*N1, 0), big.mark = ",")
pr.test <- 0.5
options(big.mark = ",")
N1 <- 11769
N1prnt <- format(N1,big.mark=",")
N1prnt
PAA <- 0.084
PWH <- 0.916
PAAperc <- PAA*95
PWHperc <- PWH*95
NAA <- format(round(PAA*N1, 0), big.mark = ",")
NAA
NWH <- format(round(PWH*N1, 0), big.mark = ",")
NWH
pr.test <- 0.5
options("big.mark")
?options
names(options)
options
names(options())
getwd()
file.edit("function_graphs.Rmd")
source("SETUP.R")
par(pch = 19, bg = NA, family = "Gill Sans", font.main = 1, font.axis = 1, cex.axis = 0.65, cex.lab = 0.65, mai = c(.5,.5,.5,.5), xaxt='n', yaxt='n', mfrow = c(1,1))
expr1 <- function(x){0*x+.5}
curve(expr1, col = mypal[5]); text(x = 0.1, y = 0.49, labels = expression(paste(italic("Group-A (y = 0*x + 0.5)"))), col = mypal[5])
expr2 <- function(x){0.25*x+.5}
curve(expr2, col = mypal[15], add = TRUE); text(x = 0.1, y = 0.535, labels = expression(paste(italic("Group-B (y = 0.25*x + 0.5)"))), col = mypal[15], srt = 32.5)
c <- 0.25/2
expr3 <- function(x){c*x+.5}
curve(expr3, col = mypal[18], add = TRUE, lty = 2 ## "lty = 2" = dashed line type ##
); text(x = 0.4, y = 0.4, labels = expression(italic(Slope[A] != 0)), col = mypal[19]); text(x = 0.6, y = 0.4, labels = expression(italic(Slope[B] == 0)), col = mypal[19]); text(x = 0.5, y = 0.385, labels = expression(paste(italic(Intercept[A] == Intercept[B]))), col = mypal[19]); title(main = "Single-Group Validity")
par(pch = 19, bg = NA, family = "ETBembo", font.main = 1, font.axis = 1, cex.axis = 0.65, cex.lab = 0.65, mai = c(.5,.5,.5,.5), xaxt='n', yaxt='n', mfrow = c(1,1))
expr1 <- function(x){0*x+.5}
curve(expr1, col = mypal[5]); text(x = 0.1, y = 0.49, labels = expression(paste(italic("Group-A (y = 0*x + 0.5)"))), col = mypal[5])
expr2 <- function(x){0.25*x+.5}
curve(expr2, col = mypal[15], add = TRUE); text(x = 0.1, y = 0.535, labels = expression(paste(italic("Group-B (y = 0.25*x + 0.5)"))), col = mypal[15], srt = 32.5)
c <- 0.25/2
expr3 <- function(x){c*x+.5}
curve(expr3, col = mypal[18], add = TRUE, lty = 2 ## "lty = 2" = dashed line type ##
); text(x = 0.4, y = 0.4, labels = expression(italic(Slope[A] != 0)), col = mypal[19]); text(x = 0.6, y = 0.4, labels = expression(italic(Slope[B] == 0)), col = mypal[19]); text(x = 0.5, y = 0.385, labels = expression(paste(italic(Intercept[A] == Intercept[B]))), col = mypal[19]); title(main = "Single-Group Validity")
?par
par(pch = 19, bg = NA, family = "Gill Sans", font.main = 1, font.axis = 1, cex.axis = 0.65, cex.lab = 0.65, mai = c(.5,.5,.5,.5), xaxt='n', yaxt='n', mfrow = c(1,1))
expr1 <- function(x){0*x+.5}
curve(expr1, col = mypal[5]); text(x = 0.1, y = 0.49, labels = expression(paste(italic("Group-A (y = 0*x + 0.5)"))), col = mypal[5])
expr2 <- function(x){0.25*x+.5}
curve(expr2, col = mypal[15], add = TRUE); text(x = 0.1, y = 0.535, labels = expression(paste(italic("Group-B (y = 0.25*x + 0.5)"))), col = mypal[15], srt = 32.5)
c <- 0.25/2
expr3 <- function(x){c*x+.5}
curve(expr3, col = mypal[18], add = TRUE, lty = 2 ## "lty = 2" = dashed line type ##
); text(x = 0.4, y = 0.4, labels = expression(italic(Slope[A] != 0)), col = mypal[19]); text(x = 0.6, y = 0.4, labels = expression(italic(Slope[B] == 0)), col = mypal[19]); text(x = 0.5, y = 0.385, labels = expression(paste(italic(Intercept[A] == Intercept[B]))), col = mypal[19]); title(main = "Single-Group Validity", family = "ETBembo")
getwd()
source("SETUP.R")
knitr::opts_chunk$set(tidy=FALSE, echo=FALSE, cache=FALSE, fig.show='last', results='asis', autodep=T, Rplot=TRUE, dev = 'pdf', fig.path='graphics/beam/rplot_', size='footnotesize', out.width = "\\linewidth")
dat <- data.frame(l1 = c("\\xbf{\\color{dkblue}{Rdocs/}}", rep(" ", 23)), l2 = c("\\xtt{_output.yml}", "\\xtt{report.Rmd}", "\\xtt{slides.Rmd}", "\\xtt{src.R}", "\\xtt{map.R}", "\\xtt{README.pdf}", "\\xit{\\color{dkblue}{\\xtt{README.Rmd}}}", "\\xtt{SETUP.R}", "\\xbf{\\color{dkblue}{\\xtt{auxDocs/}}}", rep(" ", 11), "\xbf{\\xtt{data/}}", rep(" ", 2), "\\xbf{\\color{dkblue}{\\xtt{reports/}}}"), l3 = c(rep(" ", 8), "\\xtt{header.tex}", "\\xtt{PSUbeamerStyle.tex}", "\\xtt{svmLatexBeamer.tex}", "\\xtt{APA.docx}", "\\xtt{reference_Rtft2.docx}", "\\xbf{\\xtt{et-book/}}", "\\xtt{apa.csl}", "\\xtt{chicago.csl}", "\\xtt{REFs.bib}", "\\xtt{riley.css}", "\\xtt{tufte.css}", " ", "\\xtt{data.csv}", "\\xtt{map.csv}", " ", "\\xtt{report.pdf}"))
dat
dat <- data.frame(l1 = c("\\color{dkblue{Rdocs/}}", rep(" ", 23)), l2 = c("_output.yml", "report.Rmd", "slides.Rmd", "src.R", "map.R", "README.pdf", "\\color{dkblue{README.Rmd}}", "SETUP.R", "\\color{dkblue{auxDocs/}}", rep(" ", 11), "\xbf{data/}", rep(" ", 2), "\\color{dkblue{reports/}}"), l3 = c(rep(" ", 8), "header.tex", "PSUbeamerStyle.tex", "svmLatexBeamer.tex", "APA.docx", "reference_Rtft2.docx", "\\xtt{et-book/}", "apa.csl", "chicago.csl", "REFs.bib", "riley.css", "tufte.css", " ", "data.csv", "map.csv", " ", "report.pdf"))
dat
dat <- data.frame(l1 = c("Rdocs/", rep(" ", 23)))
dat
dat <- data.frame(l1 = c("Rdocs/", rep(" ", 23)), l2 = c("_output.yml", "report.Rmd", "slides.Rmd", "src.R", "map.R", "README.pdf", "\\color{dkblue{README.Rmd}}", "SETUP.R", "\\color{dkblue{auxDocs/}}", rep(" ", 11), "\xbf{data/}", rep(" ", 2), "\\color{dkblue{reports/}}"))
dat
dat <- data.frame(l1 = c("\\xbf{\\color{dkblue}{Rdocs/}}", rep(" ", 23)), l2 = c("\\xtt{_output.yml}", "\\xtt{report.Rmd}", "\\xtt{slides.Rmd}", "\\xtt{src.R}", "\\xtt{map.R}", "\\xtt{README.pdf}", "\\xit{\\color{dkblue}{\\xtt{README.Rmd}}}", "\\xtt{SETUP.R}", "\\xbf{\\color{dkblue}{\\xtt{auxDocs/}}}", rep(" ", 11), "\\xbf{\\xtt{data/}}", rep(" ", 2), "\\xbf{\\color{dkblue}{\\xtt{reports/}}}"), l3 = c(rep(" ", 8), "\\xtt{header.tex}", "\\xtt{PSUbeamerStyle.tex}", "\\xtt{svmLatexBeamer.tex}", "\\xtt{APA.docx}", "\\xtt{reference_Rtft2.docx}", "\\xbf{\\xtt{et-book/}}", "\\xtt{apa.csl}", "\\xtt{chicago.csl}", "\\xtt{REFs.bib}", "\\xtt{riley.css}", "\\xtt{tufte.css}", " ", "\\xtt{data.csv}", "\\xtt{map.csv}", " ", "\\xtt{report.pdf}"))
dat
pandoc.table(dat)
tidy(dat)
library(formatR)
tidy(dat)
Tidy(dat)
help("formatR")
tidy.source(dat)
help(package = "formatR")
tidy_source(dat)
tidy_eval(dat)
kable(dat, format = 'latex')
kable(dat, format = 'latex', booktabs = TRUE)
kable(dat[, 1], col.names = " ", row.names = FALSE)
dat[, 3]
x <- array(c(491, 629, 63, 48), dim = c(2, 2))
x
x <- array(c(491, 629, 1120, 63, 48, 111, 554, 677, 1231), dim = c(3, 3, 3))
c
x
shiny::runApp('BIPSTUDY')
source("SETUP.R")
knitr::opts_chunk$set(tidy = TRUE, echo = FALSE, cache = FALSE, fig.show = 'hold', results = 'asis', Rplot = TRUE, fig.path = "graphics/rplot_", dev = 'pdf', dpi = 300)
maj <- data.frame(CRN = c("`PSY 610`", "`PSY 614`", "`PSY 610`", "`PSY 597`", "`PSY 510`"),
Title = c("_Top: Community \\& Social Interventions_", "_Advanced Applied Social Psychology \\& Community Psychology_", "_Top: Program Evaluation^*^_", "_Applied Survey Research^*^_", "_Top: Place-Based Research^*^_"),
Grade = c("**B+**", "**A**", "**A**", "**A-**", "**A**"),
Hrs = rep(4, 5))
majTot <- c("Total Major Area Credit Hours: ", rep(" ", ncol(maj)-2), sum(maj$Hrs))
maj <- rbind(maj, majTot)
kable(maj, caption = "Major Area Coursework: **Advanced Applied Social \\& Community Psychology**", col.names = c("CRN", "Title", "Grade", "Credit Hours"))
majTot <- c("Total Major Area Credit Hours: ", rep(" ", ncol(maj)-2), sum(maj$Hrs))
ncol(maj)-2
majTot <- c("Total Major Area Credit Hours: ", rep(" ", 2), sum(maj$Hrs))
Hrs
str(maj)
majTot <- c("Total Major Area Credit Hours: ", rep(" ", 2), sum(as.numeric(maj$Hrs)))
maj <- rbind(maj, majTot)
kable(maj, caption = "Major Area Coursework: **Advanced Applied Social \\& Community Psychology**", col.names = c("CRN", "Title", "Grade", "Credit Hours"))
maj <- data.frame(CRN = c("`PSY 610`", "`PSY 614`", "`PSY 610`", "`PSY 597`", "`PSY 510`"),
Title = c("_Top: Community \\& Social Interventions_", "_Advanced Applied Social Psychology \\& Community Psychology_", "_Top: Program Evaluation^*^_", "_Applied Survey Research^*^_", "_Top: Place-Based Research^*^_"),
Grade = c("**B+**", "**A**", "**A**", "**A-**", "**A**"),
Hrs = rep(4, 5))
majTot <- c("Total Major Area Credit Hours: ", rep(" ", 2), sum(as.numeric(maj$Hrs)))
majTot
maj <- rbind(maj, majTot)
kable(maj, caption = "Major Area Coursework: **Advanced Applied Social \\& Community Psychology**", col.names = c("CRN", "Title", "Grade", "Credit Hours"))
maj <-
data.frame(
CRN = c("`PSY 610`", "`PSY 614`", "`PSY 610`", "`PSY 597`", "`PSY 510`"),
Title = c(
"_Top: Community \\& Social Interventions_",
"_Advanced Applied Social Psychology \\& Community Psychology_",
"_Top: Program Evaluation^*^_",
"_Applied Survey Research^*^_",
"_Top: Place-Based Research^*^_"
),
Grade = c("**B+**", "**A**", "**A**", "**A-**", "**A**")
)
kable(
maj,
caption = "**Major Area Coursework:** Advanced Applied Social \\& Community Psychology",
col.names = c("CRN", "Title", "Grade", "Credit Hours")
)
maj <-
data.frame(
CRN = c("`PSY 610`", "`PSY 614`", "`PSY 610`", "`PSY 597`", "`PSY 510`"),
Title = c(
"_Top: Community \\& Social Interventions_",
"_Advanced Applied Social Psychology \\& Community Psychology_",
"_Top: Program Evaluation^*^_",
"_Applied Survey Research^*^_",
"_Top: Place-Based Research^*^_"
),
Grade = c("**B+**", "**A**", "**A**", "**A-**", "**A**"),
Hrs = rep(4, 5)
)
kable(
maj,
caption = "**Major Area Coursework**: Advanced Applied Social \\& Community Psychology",
col.names = c("CRN", "Title", "Grade", "Credit Hours")
)
maj <-
data.frame(
CRN = c("`PSY 610`",
"`PSY 614`",
"`PSY 610`",
"`PSY 597`",
"`PSY 510`"),
Title = c("_Top: Community \\& Social Interventions_",
"_Advanced Applied Social Psychology \\&
Community Psychology_",
"_Top: Program Evaluation^`*`^_",
"_Applied Survey Research^`*`^_",
"_Top: Place-Based Research^`*`^_"),
Grade = c("**B+**",
"**A**",
"**A-**",
"**A**"),
Hrs = rep(4, 5))
kable(maj, caption = "**Major Area Coursework**: Applied
Social \\& Community Psychology",
col.names = c("CRN",
"Title",
"Grade",
"Credit Hours"))
maj <-
data.frame(
CRN = c("`PSY 610`",
"`PSY 614`",
"`PSY 610`",
"`PSY 597`",
"`PSY 510`"),
Title = c("_Top: Community \\& Social Interventions_",
"_Advanced Applied Social Psychology \\& Community Psychology_",
"_Top: Program Evaluation^`*`^_",
"_Applied Survey Research^`*`^_",
"_Top: Place-Based Research^`*`^_"),
Grade = c("**B+**",
"**A**",
"**A-**",
"**A**"),
Hrs = rep(4, 5))
kable(maj, caption = "**Major Area Coursework**: Applied
Social \\& Community Psychology",
col.names = c("CRN",
"Title",
"Grade",
"Credit Hours"))
kable(maj, caption = "**Major Area Coursework**: Applied
Social \\& Community Psychology",
col.names = c("CRN",
"Title",
"Grade",
"Credit Hours"),
align = c('c', 'l', 'c', 'c'))
maj <-
data.frame(
CRN = c("`SOC 610`",
"`PSY 610`",
"`SOC 610`",
"`PSY 510`",
"`SOC 610`",
"`PSY 597`",
"`PSY 510`"),
Title = c("_Top: Focus Groups_",
"_Top: Program Evaluation^`*`^_",
"_Top: Qualitative Data Analysis_",
"_Top: HLM/Mixed Effects Models for Longitudinal Data Analysis_",
"_Top: Mixed Methods Research_",
"_Applied Survey Research^`*`^_",
"_Top: Place-Based Research^`*`^_"),
Grade = c("**A**",
"**A**",
"**A-**",
"**A**"),
Hrs = rep(4, 7))
kable(maj, caption = "**Minor Area Coursework**: Mixed Methods Research",
col.names = c("CRN",
"Title",
"Grade",
"Credit Hours"),
align = c('c', 'l', 'c', 'c'))
reqr <-
data.frame(
CRN = c("`PSY 621`",
"`PSY 618`",
"`PSY 622`",
"`PSY 624`"),
Title = c("_Univariate Quantitative Methods_",
"_Ethics \& Professional Issues in Applied Research and Practice_",
reqr <-
data.frame(
CRN = c("`PSY 621`",
"`PSY 618`",
"`PSY 622`",
"`PSY 624`"),
Title = c("_Univariate Quantitative Methods_",
"_Ethics \\& Professional Issues in Applied Research and Practice_",
"_Multiple Regression \\& Multivariate Quantitative Methods_",
"_Research Design in Applied Psychology_"),
Grade = c("**A-*",
"**A**",
"**B+*",
"**A**"),
Hrs = c(5,
4,
5,
4))
kable(reqr, caption = "Research Methods \\& Statistics Coursework Required by Program",
col.names = c("CRN",
"Title",
"Grade",
"Credit Hours"),
align = c('c', 'l', 'c', 'c'))
prac <-
data.frame(
CRN = c("`PSY 609`",
"`PSY 609`",
"`PSY 501`"),
Title = c("_Prac: Violence Prevention I_",
"_Prac: Violence Prevention II_",
"_Res: BIP Staff Interviews_"),
Grade = c("**P**",
"**P**",
"**A**"),
Hrs = c(1,
1,
6))
kable(prac, caption = "Research \\& Field-Based Practica",
col.names = c("CRN",
"Title",
"Grade",
"Credit Hours"),
align = c('c', 'l', 'c', 'c'))
install.packages("rpivotTable")
chisq <- data.frame(df1 = c(0.004, 0.02, 0.06, 0.15, 0.46, 1.07, 1.64, 2.71, 3.84, 6.64, 10.83),
df2 = c(0.10, 0.21, 0.45, 0.71, 1.39, 2.41, 3.22, 4.60, 5.99, 9.21, 13.82),
df3 = c(0.35, 0.58, 1.01, 1.42, 2.37, 3.66, 4.64, 6.25, 7.82, 11.34, 16.27),
df4 = c(0.71, 1.06, 1.65, 2.20, 3.36, 4.88, 5.99, 7.78, 9.49, 13.28, 18.47),
df5 = c(1.14, 1.61, 2.34, 3.00, 4.35, 6.06, 7.29, 9.24, 11.07, 15.09, 20.52),
df6 = c(1.63, 2.20, 3.07, 3.83, 5.35, 7.23, 8.56, 10.64, 12.59, 16.81, 22.46),
df7 = c(2.17, 2.83, 3.82, 4.67, 6.35, 8.38, 9.80, 12.02, 14.07, 18.48, 24.32),
df8 = c(2.73, 3.49, 4.59, 5.53, 7.34, 9.52, 11.03, 13.36, 15.51, 20.09, 26.12),
df9 = c(3.32, 4.17, 5.38, 6.39, 8.34, 10.66, 12.24, 14.68, 16.92, 21.67, 27.88),
df10 = c(3.94, 4.87, 6.18, 7.27, 9.34, 11.78, 13.44, 15.99, 18.31, 23.21, 29.59),
PValue = c(0.95, 0.90, 0.80, 0.70, 0.50, 0.30, 0.20, 0.10, 0.05, 0.01, 0.001))
source("SETUP.R")
knitr::opts_chunk$set(
tidy = TRUE,
echo = TRUE,
cache = FALSE,
fig.keep = 'high',
fig.show = 'asis',
results = 'asis',
autodep = T,
Rplot = TRUE,
dev = 'pdf',
fig.path = 'graphics/rplot_',
fig.width = 7,
fig.height = 7,
out.width = "\\linewidth"
)
kable(chisq)
kable(t(chisq))
chisq.v <- matrix(c(0.004, 0.02, 0.06, 0.15, 0.46, 1.07, 1.64, 2.71, 3.84, 6.64, 10.83,
0.10, 0.21, 0.45, 0.71, 1.39, 2.41, 3.22, 4.60, 5.99, 9.21, 13.82,
0.35, 0.58, 1.01, 1.42, 2.37, 3.66, 4.64, 6.25, 7.82, 11.34, 16.27,
0.71, 1.06, 1.65, 2.20, 3.36, 4.88, 5.99, 7.78, 9.49, 13.28, 18.47,
1.14, 1.61, 2.34, 3.00, 4.35, 6.06, 7.29, 9.24, 11.07, 15.09, 20.52,
1.63, 2.20, 3.07, 3.83, 5.35, 7.23, 8.56, 10.64, 12.59, 16.81, 22.46,
2.17, 2.83, 3.82, 4.67, 6.35, 8.38, 9.80, 12.02, 14.07, 18.48, 24.32,
2.73, 3.49, 4.59, 5.53, 7.34, 9.52, 11.03, 13.36, 15.51, 20.09, 26.12,
3.32, 4.17, 5.38, 6.39, 8.34, 10.66, 12.24, 14.68, 16.92, 21.67, 27.88,
3.94, 4.87, 6.18, 7.27, 9.34, 11.78, 13.44, 15.99, 18.31, 23.21, 29.59), nrow = 10, byrow = TRUE)
chisq.df <- matrix(c(0.95, 0.90, 0.80, 0.70, 0.50, 0.30, 0.20, 0.10, 0.05, 0.01, 0.001), nrow = 1, byrow = TRUE)
chisq.df <- data.frame(df1 = c(0.004, 0.02, 0.06, 0.15, 0.46, 1.07, 1.64, 2.71, 3.84, 6.64, 10.83),
df2 = c(0.10, 0.21, 0.45, 0.71, 1.39, 2.41, 3.22, 4.60, 5.99, 9.21, 13.82),
df3 = c(0.35, 0.58, 1.01, 1.42, 2.37, 3.66, 4.64, 6.25, 7.82, 11.34, 16.27),
df4 = c(0.71, 1.06, 1.65, 2.20, 3.36, 4.88, 5.99, 7.78, 9.49, 13.28, 18.47),
df5 = c(1.14, 1.61, 2.34, 3.00, 4.35, 6.06, 7.29, 9.24, 11.07, 15.09, 20.52),
df6 = c(1.63, 2.20, 3.07, 3.83, 5.35, 7.23, 8.56, 10.64, 12.59, 16.81, 22.46),
df7 = c(2.17, 2.83, 3.82, 4.67, 6.35, 8.38, 9.80, 12.02, 14.07, 18.48, 24.32),
df8 = c(2.73, 3.49, 4.59, 5.53, 7.34, 9.52, 11.03, 13.36, 15.51, 20.09, 26.12),
df9 = c(3.32, 4.17, 5.38, 6.39, 8.34, 10.66, 12.24, 14.68, 16.92, 21.67, 27.88),
df10 = c(3.94, 4.87, 6.18, 7.27, 9.34, 11.78, 13.44, 15.99, 18.31, 23.21, 29.59),
PValue = c(0.95, 0.90, 0.80, 0.70, 0.50, 0.30, 0.20, 0.10, 0.05, 0.01, 0.001))
chisq.df
chisq.p <- matrix(c(0.95, 0.90, 0.80, 0.70, 0.50, 0.30, 0.20, 0.10, 0.05, 0.01, 0.001), nrow = 1, byrow = TRUE)
chisq.p
chisq.v
plot(chisq.v)
plot(chisq.p)
plot(chisq.p, chisq.v)
chisq.d <- matrix(seq(1:10), nrow = 10, byrow = TRUE)
setwd("comps/bookdown")
bookdown::render_book("index.Rmd", "bookdown::tufte_book2")
